pipeline {
    agent any
    environment {
        registry = credentials('docker_hub_registry')
        registryCredential = credentials('docker_hub')
	db_creds = credentials('sql_user_pass')
    }
    stages {
        stage('Run backend server') {
            steps {
                bat 'start /min python rest_app.py "%db_creds_USR%" "%db_creds_PSW%"'
            }
        }
	stage('Backend testing') {
            steps {
                bat 'python backend_testing.py "%db_creds_USR%" "%db_creds_PSW%"'
            }
        }
	stage('Clean environment') {
            steps {
                bat 'python clean_environment.py'
            }
        }
        stage('Build Docker Image and append CMD to Dockerfile') {
            steps {
	        bat "echo CMD python3 rest_app.py %db_creds_USR% %db_creds_PSW%>> Dockerfile"
                bat 'docker build -t %registry%:%BUILD_NUMBER% .'
            }
        }
	stage('Push Docker Image to Hub') {
            steps {
		bat 'docker login -u %registryCredential_USR% -p %registryCredential_PSW%'
		bat 'docker push %registry%:%BUILD_NUMBER%'
            }
        }
	stage('Set version') {
            steps {
                bat "(echo VERSION=%BUILD_NUMBER% & echo REGISTRY=%registry%) > .env"
            }
        }
	stage('Docker compose up') {
            steps {
                bat "docker-compose up -d"
            }
        }
	stage('Dockerized app backend testing') {
            steps {
                bat 'python docker_backend_testing.py "%db_creds_USR%" "%db_creds_PSW%"'
            }
        }
        stage('Clean Docker environment') {
            steps {
		bat 'docker-compose down'
                bat 'python clean_environment.py'
            }
        }
	stage('Install Helm chart and write service URL') {
            steps {
		bat 'helm install guy-projecthelmchart ProjectHelmChart --set image.tag=%BUILD_NUMBER%  --set image.repository=%registry%'
		bat 'minikube service guy-projecthelmchart-service --url > k8s_url.txt'
		bat 'type k8s_url.txt'
            }
        }
	stage('Test K8S app') {
            steps {
                bat 'python K8S_backend_testing.py "%db_creds_USR%" "%db_creds_PSW%"'
            }
        }
	stage('Delete Helm chart') {
            steps {
		bat 'helm delete guy-projecthelmchart'
            }
        }
    }
        post{
         always{
         bat "docker rmi %registry%:%BUILD_NUMBER%"
         }
     }
}
